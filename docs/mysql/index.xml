<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mysql on 常用中间件分析</title><link>https://zput.github.io/middleware/docs/mysql/</link><description>Recent content in Mysql on 常用中间件分析</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Sat, 26 Mar 2016 08:47:11 +0100</lastBuildDate><atom:link href="https://zput.github.io/middleware/docs/mysql/index.xml" rel="self" type="application/rss+xml"/><item><title>mysql高级总结</title><link>https://zput.github.io/middleware/docs/mysql/MySQL/</link><pubDate>Fri, 24 Jan 2020 10:33:00 +0000</pubDate><guid>https://zput.github.io/middleware/docs/mysql/MySQL/</guid><description>0.重要的知识点 # MySQL逻辑架构 1.1. 连接层 1.2. 服务层 1.3. 引擎层(存储引擎是基于表的，而不是数据库) 1.4. 存储层
如何修改字符集(查看1.3)
日志 3.1. 查询日志 3.2. 错误日志 3.3. 二进制日志
分析慢SQL的步骤 first:找到是那些sql慢. 4.1. 慢查询的开启，设置阈值(如超过5秒钟的就是慢SQL)并捕获。 second:开始分析这些sql. 4.2. explain + 慢SQL分析。 查询语句写的差。 关联 查询太多join（设计缺陷或者不得已的需求）。 索引失效：索引建了，但是没有用上。 4.3. show Profile查询SQL在MySQL数据库中的执行细节和生命周期情况。 4.4. MySQL数据库服务器的参数调优。 SQL执行顺序 select # 5 ----&amp;gt; ... from # 1 ... where # 2 .... group by # 3 ... having # 4 ----&amp;gt; ... order by # 6 ... limit # 7 [offset] join 索引 what: A database index is a data structure that improves the speed of operations in a table</description></item><item><title>mysql总结</title><link>https://zput.github.io/middleware/docs/mysql/mysql2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zput.github.io/middleware/docs/mysql/mysql2/</guid><description>0.重要的知识点 表空间的格式 页的结构 文件管理页 INODE页 INDEX数据索引页 聚簇和非聚簇 index Row Format what: what: how: 讨论innodb数据结构 log mvcc FQA 0.重要的知识点 # MySQL逻辑架构 1.1. 连接层 1.2. 服务层 1.3. 引擎层(存储引擎是基于表的，而不是数据库) 1.4. 存储层
如何修改字符集(查看1.3)
日志 3.1. 查询日志 3.2. 错误日志 3.3. 二进制日志
分析慢SQL的步骤 first:找到是那些sql慢. 4.1. 慢查询的开启，设置阈值(如超过5秒钟的就是慢SQL)并捕获。 second:开始分析这些sql. 4.2. explain + 慢SQL分析。 查询语句写的差。 关联 查询太多join（设计缺陷或者不得已的需求）。 索引失效：索引建了，但是没有用上。 4.3. show Profile查询SQL在MySQL数据库中的执行细节和生命周期情况。 4.4. MySQL数据库服务器的参数调优。 SQL执行顺序 select # 5 ----&amp;gt; ... from # 1 ... where # 2 .... group by # 3 .</description></item></channel></rss>